/****
 * The sections and descriptors described below are taken from ISO 13818-1
 * (the document specifying the MPEG Transport Stream).
 *
 * For any portions of this file which constitute copyright work of which I
 * am the author, I hereby grant any and all persons in receipt of this file
 * an irrevocable non-exclusive worldwide royalty-free license to use,
 * transform, distribute, sub-license, and modify those portions in any
 * manner that they see fit.
 *
 * -- Mo McRoberts <mo.mcroberts@nexgenta.com>
 ****/

/* This is not real (CORBA, XP, DCE, Microsoft) IDL. This is a set of section
 * and descriptor definitions described by the ISO (MPEG) as part of
 * ISO 13818-1/ITU-T Rec. H.222.0.
 *
 * gentables converts this file into a C header which can be used
 * by MPEG section/descriptor parsers.
 */

/* Generic programme-specific information section prologue */
psi_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf reserved_future_use:1;
	bslbf reserved:2;
	uimsbf section_length:12;
}

/* PID = 0x0000, table_id = 0x00: Programme Association Table (PAT) */
[tag=pat]
programme_association_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf reserved_future_use:1;
	bslbf reserved:2;
	uimsbf section_length:12;
	uimsbf transport_stream_id:16;
	bslbf reserved:2;
	uimbsf version_number:5;
	bslbf current_next_indicator:1;
	uimsbf section_number:8;
	uimsbf last_section_number:8;
	[tag=pat_program]
	for(i = 0; i < N; i++) {
		uimsbf program_number:16;
		bslbf reserved:3;
		uimsbf network_PID:13;
	}
	rpchof CRC_32:32;
}

/* table_id = 0x01: Conditional Access Table (CAT) */
[tag=cat]
CA_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf reserved_future_use:1;
	bslbf reserved:2;
	uimsbf section_length:12;
	bslbf reserved:18;
	uimbsf version_number:5;
	bslbf current_next_indicator:1;
	uimsbf section_number:8;
	uimsbf last_section_number:8;
	for(i = 0; i < N; i++) {
		descriptor();
	}
	rpchof CRC_32:32;
}

/* table_id = 0x02: Program Map Table (PMT) */
[tag=pmt]
TS_program_map_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf reserved_future_use:1;
	bslbf reserved:2;
	uimsbf section_length:12;
	uimsbf program_number:16;
	bslbf reserved:2;
	uimbsf version_number:5;
	bslbf current_next_indicator:1;
	uimsbf section_number:8;
	uimsbf last_section_number:8;
	bslbf reserved:3;
	uimsbf PCR_PID:13;
	bslbf reserved:4;
	uimsbf program_info_length:12;
	for(i = 0; i < N; i++) {
		descriptor();
	}
	[tag=pmt_program]
	for(i = 0; i < N1; i++) {
		uimsbf stream_type:8;
		bslbf reserved:3;
		uimsbf elementary_PID:13;
		bslbf reserved:4;
		uimsbf ES_info_length:12;
		for(i = 0; i < N2; i++) {
			descriptor();
		}
	}
	rpchof CRC_32:32;
}

/* table_id = 0x03: TS_description_section */
[tag=tsdt]
TS_description_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf reserved_future_use:1;
	bslbf reserved:2;
	uimsbf section_length:12;
	bslbf reserved:18;
	uimsbf version_number:5;
	bslbf current_next_indicator:1;
	uimsbf section_number:8;
	uimsbf last_section_number:8;
	for(i = 0; i < N; i++) {
		descriptor();
	}
	rpchof CRC_32:32;
}

/* table_id = 0x04: ISO_IEC_14496_scene_description_section */

/* table_id = 0x05: ISO_IEC_14496_object_descriptor_section */

/* 0x06 >= table_id >= 0x37: Reserved */

/* 0x38 >= table_id >= 0x3F: Defined in ISO/IEC 13818-6 */

/* 0x40 >= table_id >= 0xFE: User private */
private_section() {
	uimsbf table_id:8;
	bslbf section_syntax_indicator:1;
	bslbf private_indicator:1;
	bslbf reserved:2;
	uimsbf private_section_length:12;
	[tag=private_bytes]
	if(section_syntax_indicator == 0) {
		for(i = 0; i < N; i++) {
			bslbf private_data_byte:8;
		}
	}
	[tag=private_extension]
	else
	{
		uimsbf table_id_extension:16;
		bslbf reserved:2;
		uimsbf version_number:5;
		bslbf current_next_indicator:1;
		uimsbf section_number:8;
		uimsbf last_section_number:8;
		for(i = 0; i < private_section_length - 9; i++) {
			bslbf private_data_byte:8;
		}
		rpchof CRC_32:32;
	}
}
